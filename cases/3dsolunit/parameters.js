const NUM_NODES = 26;
const NUM_ELEMS = 37;

const COORS_1 = [[-1.00, 0.00, 0.00],[-0.50, 0.00, 0.00],[-0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[1.00, 0.00, 0.00],[0.50, 0.00, 0.00],[-0.50, 0.00, 0.00],[-1.00, 0.00, 0.00],[-0.50, 0.00, 0.00],[-0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[1.00, 0.00, 0.00],[0.50, 0.00, 0.00],[-0.50, 0.00, 0.00],[-1.00, 0.00, 0.00],[-0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[-0.50, 0.00, 0.00],[0.50, 0.00, 0.00],[1.00, 0.00, 0.00],[-0.50, 0.00, 0.00],[0.50, 0.00, 0.00]];
const COORS_2 = [[1.00, 0.00, 0.00],[1.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[1.00, 0.00, 0.00],[1.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[1.00, 0.00, 0.00],[1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[1.00, 0.00, 0.00],[1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[-1.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00]];
const COORS_3 = [[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 1.00, 0.00],[0.00, 1.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, -1.00, 0.00],[0.00, -1.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 1.00, 0.00],[0.00, 1.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, -1.00, 0.00],[0.00, -1.00, 0.00],[0.00, 1.00, 0.00],[0.00, 1.00, 0.00],[0.00, 1.00, 0.00],[0.00, 1.00, 0.00],[0.00, -1.00, 0.00],[0.00, -1.00, 0.00],[0.00, -1.00, 0.00],[0.00, -1.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00]];
const COORS_4 = [[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, 1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, -1.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00],[0.00, 0.00, 0.00]];

const CONNECT = [[1, 2],[2, 3],[3, 4],[5, 4],[5, 6],[7, 5],[8, 7],[8, 2],[9, 10],[10, 11],[11, 12],[13, 12],[13, 14],[15, 13],[16, 15],[16, 10],[17, 18],[18, 11],[19, 12],[19, 20],[4, 19],[3, 18],[21, 22],[22, 16],[23, 15],[23, 24],[7, 23],[8, 22],[25, 18],[26, 19],[23, 26],[22, 25],[25, 10],[26, 13],[5, 26],[2, 25],[25, 26]];

const STH_ARR = [[63.6573,[-0.0905,-0.0915,-0.0924,-0.0933,-0.0941,-0.0950,-0.0958,-0.0966,-0.0974,-0.0981,-0.0989,-0.0996,-0.1003,-0.1010,-0.1016,-0.1023,-0.1029,-0.1035,-0.1041,-0.1047,-0.1052,-0.1057,-0.1063,-0.1067,-0.1072,-0.1077,-0.1081,-0.1085,-0.1089,-0.1092,-0.1096,-0.1099,-0.1102,-0.1105,-0.1107,-0.1110,-0.1112,-0.1114,-0.1115,-0.1117,-0.1118,-0.1119,-0.1120,-0.1120,-0.1121,-0.1121,-0.1121,-0.1120,-0.1120,-0.1119,-0.1118,-0.1117,-0.1115,-0.1114,-0.1112,-0.1110,-0.1107,-0.1105,-0.1102,-0.1099,-0.1096,-0.1092,-0.1089,-0.1085,-0.1081,-0.1077,-0.1072,-0.1067,-0.1063,-0.1057,-0.1052,-0.1047,-0.1041,-0.1035,-0.1029,-0.1023,-0.1016,-0.1010,-0.1003,-0.0996,-0.0989,-0.0981,-0.0974,-0.0966,-0.0958,-0.0950,-0.0941,-0.0933,-0.0924,-0.0915,-0.0905],[-0.0906,-0.0955,-0.1003,-0.1049,-0.1094,-0.1138,-0.1182,-0.1225,-0.1267,-0.1310,-0.1352,-0.1393,-0.1435,-0.1476,-0.1517,-0.1558,-0.1598,-0.1638,-0.1679,-0.1719,-0.1759,-0.1798,-0.1838,-0.1878,-0.1917,-0.1957,-0.1996,-0.2035,-0.2075,-0.2114,-0.2153,-0.2192,-0.2231,-0.2269,-0.2308,-0.2347,-0.2386,-0.2425,-0.2463,-0.2502,-0.2540,-0.2579,-0.2617,-0.2656,-0.2694,-0.2733,-0.2771,-0.2809,-0.2848,-0.2886,-0.2924]],[3.1066,[0.2488,0.2287,0.2101,0.1926,0.1760,0.1603,0.1454,0.1311,0.1175,0.1044,0.0919,0.0799,0.0684,0.0573,0.0467,0.0365,0.0268,0.0174,0.0084,-0.0002,-0.0084,-0.0162,-0.0237,-0.0309,-0.0377,-0.0442,-0.0503,-0.0561,-0.0615,-0.0667,-0.0715,-0.0760,-0.0801,-0.0840,-0.0875,-0.0908,-0.0937,-0.0963,-0.0986,-0.1006,-0.1023,-0.1036,-0.1047,-0.1055,-0.1059,-0.1061,-0.1059,-0.1055,-0.1047,-0.1036,-0.1023,-0.1006,-0.0986,-0.0963,-0.0937,-0.0908,-0.0875,-0.0840,-0.0801,-0.0760,-0.0715,-0.0667,-0.0615,-0.0561,-0.0503,-0.0442,-0.0377,-0.0309,-0.0237,-0.0162,-0.0084,-0.0002,0.0084,0.0174,0.0268,0.0365,0.0467,0.0573,0.0684,0.0799,0.0919,0.1044,0.1175,0.1311,0.1454,0.1603,0.1760,0.1926,0.2101,0.2287,0.2488],[-0.3277,-0.2911,-0.2604,-0.2337,-0.2100,-0.1884,-0.1687,-0.1504,-0.1334,-0.1174,-0.1023,-0.0879,-0.0743,-0.0613,-0.0488,-0.0368,-0.0252,-0.0140,-0.0032,0.0074,0.0176,0.0275,0.0372,0.0467,0.0559,0.0649,0.0738,0.0825,0.0910,0.0994,0.1076,0.1157,0.1237,0.1316,0.1393,0.1470,0.1545,0.1620,0.1693,0.1766,0.1838,0.1909,0.1980,0.2050,0.2119,0.2187,0.2255,0.2323,0.2390,0.2456,0.2522]],[0.1100,[0.3596,0.2406,0.1494,0.0786,0.0231,-0.0202,-0.0539,-0.0798,-0.0992,-0.1132,-0.1227,-0.1285,-0.1311,-0.1311,-0.1288,-0.1246,-0.1189,-0.1118,-0.1037,-0.0948,-0.0852,-0.0750,-0.0646,-0.0538,-0.0430,-0.0321,-0.0213,-0.0107,-0.0002,0.0099,0.0196,0.0290,0.0379,0.0463,0.0542,0.0615,0.0681,0.0742,0.0796,0.0843,0.0883,0.0916,0.0942,0.0960,0.0971,0.0975,0.0971,0.0960,0.0942,0.0916,0.0883,0.0843,0.0796,0.0742,0.0681,0.0615,0.0542,0.0463,0.0379,0.0290,0.0196,0.0099,-0.0002,-0.0107,-0.0213,-0.0321,-0.0430,-0.0538,-0.0646,-0.0750,-0.0852,-0.0948,-0.1037,-0.1118,-0.1189,-0.1246,-0.1288,-0.1311,-0.1311,-0.1285,-0.1227,-0.1132,-0.0992,-0.0798,-0.0539,-0.0202,0.0231,0.0786,0.1494,0.2406,0.3596],[-0.4560,-0.2232,-0.0806,0.0124,0.0748,0.1170,0.1453,0.1637,0.1748,0.1805,0.1821,0.1805,0.1764,0.1704,0.1629,0.1543,0.1447,0.1343,0.1234,0.1120,0.1003,0.0882,0.0760,0.0637,0.0512,0.0386,0.0260,0.0134,0.0008,-0.0118,-0.0244,-0.0370,-0.0494,-0.0619,-0.0742,-0.0865,-0.0987,-0.1109,-0.1230,-0.1350,-0.1469,-0.1588,-0.1705,-0.1822,-0.1938,-0.2054,-0.2168,-0.2282,-0.2395,-0.2508,-0.2619]]];

const A_ARR   = new Array(51);
const B_ARR   = new Array(51);
const T_ARR   = new Array(51);
const PHI_ARR = new Array(51);
const NU_ARR  = new Array(51);
const AL_ARR  = new Array(91);
const CAL_ARR = new Array(91);
const SAL_ARR = new Array(91);
const COORS_T = new Array(NUM_NODES);

let B_PM   = 25; 
let A_PM   = 25;
let AL_PM  = 15;
let PHI_PM = 10;
let T_PM   = 25;  
let NU_PM  = 50; 

let STH = 0;

for (var i = 0; i < STH_ARR.length; i++)
	STH += STH_ARR[i][0]*STH_ARR[i][1][AL_PM]*STH_ARR[i][2][PHI_PM];

for (var i = 0; i < A_ARR.length; i++) {
	A_ARR[i]   = 0.3  + i*(0.7-0.3)/(51-1);
	B_ARR[i]   = 1.0  + i*(1.5-1.0)/(51-1);
	T_ARR[i]   = 0.01 + i*(0.1-0.01)/(51-1);
	NU_ARR[i]  = -0.5 + i*(0.3+0.5)/(51-1);
	PHI_ARR[i] = 0.75 + i*(2-0.75)/(51-1);
}

for (var i = 0; i < AL_ARR.length; i++) {
	AL_ARR[i]    = 45 + i*(135-45)/(91-1);
	SAL_ARR[i]   = Math.sin(0.25*Math.PI + 0.5*i*Math.PI/(91-1));
	CAL_ARR[i]   = Math.cos(0.25*Math.PI + 0.5*i*Math.PI/(91-1));
}

for (var i = 0; i < COORS_T.length; i++) {
	COORS_T[i] = new Array(3);

	for (var j = 0; j < COORS_T[i].length; j++) 
		COORS_T[i][j] = COORS_1[i][j]*B_ARR[B_PM] + 
						COORS_2[i][j]*A_ARR[A_PM]*CAL_ARR[AL_PM] + 
						COORS_3[i][j]*A_ARR[A_PM]*SAL_ARR[AL_PM] + 
						COORS_4[i][j]*A_ARR[A_PM]*PHI_ARR[PHI_PM]*STH;
}

// Slider control (defines controller object properties)
let slider = {
	b:        B_ARR[B_PM],
	a:        A_ARR[A_PM],
	phi:      PHI_ARR[PHI_PM],
	alpha:    AL_ARR[AL_PM],
	t:        T_ARR[T_PM],
	defx:     0.0000,
	defy:     0.0000,
	defz:     0.0000,
	defyz:    0.0000,
	defxz:    0.0000,
	defxy: 	  0.0000,
	plot1:    'xx',
	plot2:    'Nu surfaces',
	plot3:    'a',
	plot2cas: 'nu_yx',
	rectr:    function() {centerFigure()},
	reslt:    function() {result()},
	modes0:   true,
	modes1:   true,
	modes2:   true,
	modes3:   true,
	modes4:   true,
	modes5:   false,
	modes6:   false,
	modes7:   false,
	modes8:   false
};
